# Company Junction Pipeline Configuration

# Data Processing Settings
data:
  # Default name column for duplicate detection
  name_column: "Account Name"
  
  # Supported file formats
  supported_formats: [".csv", ".xlsx", ".xls"]
  
  # Output file naming pattern
  output_pattern: "cleaned_{object_type}_{timestamp}.csv"

similarity:
  high: 92
  medium: 84
  penalty:
    suffix_mismatch: 25
    num_style_mismatch: 5
    punctuation_mismatch: 3
  max_alias_pairs: 100000
  performance:
    block_cap: 800  # Deterministic cap per block
    secondary_blocking: "first_two_tokens"  # or "char_bigrams"
    pair_threshold_medium: 0.63  # Keep existing threshold if stable
    enable_vectorized_prefilters: true  # Enable character/token length filters
    max_length_diff: 5  # Maximum character length difference for prefiltering
    shard_jumbo_blocks: true  # NEW: shard large blocks deterministically
    shard_strategy: "third_token_initial"  # NEW: "third_token_initial" | "first_bigram"
    ban_top_tokens:
      enable: true  # NEW: exclude most frequent first tokens from primary blocking
      top_k: 30  # NEW: number of top tokens to ban

  scoring:
    use_bulk_cdist: true  # NEW: use RapidFuzz bulk scoring
    gate_cutoff: 72  # NEW: token_set_ratio gate cutoff
    medium: 84  # existing threshold
    penalty:
      num_style_mismatch: 5
      suffix_mismatch: 25
      punctuation_mismatch: 3

grouping:
  edge_gating:
    enabled: true
    require_high_to_primary: false
    allow_medium_plus_shared_token: true
    shared_token_source: "name_core_tokens"  # exclude stop tokens
    canopy_bound:
      enabled: true
      max_without_high_edge: 8
    performance:
      vectorize_edge_scores: true  # NEW: build dict without iterrows
      token_parse: auto  # NEW: 'auto'|'json'|'list'; auto skips parse if already list
      maintain_unionfind_size: true  # NEW: enable size[] for canopy checks
      pair_columns: [id_a, id_b, score]  # NEW: restrict columns during sort to reduce copy

llm:
  enabled: false
  delete_threshold: 85

survivorship:
  tie_breakers: [created_date, account_id]
  optimized: true   # controls the hybrid fast-path
  performance:
    vectorized: true  # NEW: enable vectorized primary selection
    generate_preview_by_group: true  # NEW: generate per-group previews
    skip_clean_groups: true  # NEW: skip groups with no conflicts
  preview_output: "survivorship_preview.parquet"  # NEW: output path for previews

io:
  interim_format: parquet
  use_arrow_strings: false  # DISABLED: PyArrow backend removed, using DuckDB + pandas strings

disposition:
  performance:
    vectorized: true  # NEW: enable np.select path
    compile_token_regex_once: true  # NEW
    suspicious_singleton_regex: "(?i)\\b(unknown|unsure|not sure|no idea|test|sample|example|dummy|temp|temporary|temp agency|none|n/?a|tbd|delete|remove|do not use)\\b"
  manual_overrides:
    enabled: true
    key_column: "account_id"  # adjust to actual id column if not index

# UI Performance Configuration
ui_perf:
  groups:
    use_stats_parquet: true         # rollback toggle
    duckdb_prefer_over_pyarrow: true
    rows_duckdb_threshold: 30000
    groups_duckdb_threshold: 10000
  details:
    use_details_parquet: true       # rollback toggle
    allow_pyarrow_fallback: true    # enable fallback for group details
    lru_capacity: 16
    auto_load_on_expand: true       # auto-load details when expander opens
    show_load_button: false         # hide button when auto-load enabled

# UI Configuration
ui:
  sort:
    default: "group_size DESC"      # Default sort when unknown sort key provided
  use_duckdb_for_groups: false     # Legacy flag for DuckDB preference

# Salesforce Integration
salesforce:
  # Default object types
  object_types: ["Account", "Contact", "Lead", "Opportunity"]
  
  # Batch size for API operations
  batch_size: 200
  
  # Retry settings for failed operations
  max_retries: 3
  retry_delay: 5

# Engine Configuration
engine:
  duckdb:
    enabled: true  # DuckDB is the single engine for non-pandas work
    threads: auto  # auto-detect optimal thread count
    preserve_order: true  # deterministic ordering where needed

# Parallelism Configuration
parallelism:
  # Default number of workers (None for auto-detection)
  workers: auto  # NEW: resolve to min(8, cpu_count)
  
  # Backend to use ('loky' for processes, 'threading' for threads)
  backend: "loky"  # prefer processes
  
  # Chunk size for parallel processing
  chunk_size: 1000
  
  # Chunk size for pair processing (NEW)
  chunk_size_pairs: 300000  # NEW: hint for execute_chunked
  
  # Threshold for auto-switching to sequential execution
  small_input_threshold: 10000
  
  # Memory cap percentage (0.75 = 75% of total RAM)
  memory_cap_percent: 75.0

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "pipeline.log"

# Cleanup Configuration
cleanup:
  protect_latest: true
  pinned_runs: []
  max_age_days: null  # no default age limit
  keep_at_least: 1  # minimum runs to keep (0 allows empty state)
  allow_empty_state: false  # feature flag for empty state support

# CSV Processing Configuration
csv:
  # Engine preference for CSV reading (auto, pyarrow, c, python)
  engine: "auto"
  
  # Number of rows to sample for schema inference
  sample_rows: 10000
  
  # Columns to force to string type
  force_string_cols:
    - "account_id"
    - "parent_account_id"

# File Paths
paths:
  raw_data: "data/raw"
  interim_data: "data/interim"
  processed_data: "data/processed"
  test_fixtures: "tests/fixtures"

# UI Configuration
ui:
  page_size_default: 50  # Emergency reduction from 500
  timeout_seconds: 30  # Timeout for UI operations
  cache_capacity: 16  # LRU cache capacity for details
  duckdb_threads: 4  # Number of DuckDB threads
  max_pyarrow_group_stats_seconds: 5  # Auto-switch threshold for group stats
  use_duckdb_for_groups: true  # Force DuckDB routing for groups list

# Alias Matching Configuration
alias:
  optimize: true  # Enable optimized alias matching (Phase 1.21.1)
  workers: 12  # Number of parallel workers for alias matching
  progress_interval_s: 1.0  # Progress log interval in seconds
  page_size_options: [50, 100, 200, 500]
  max_page_fetch_seconds: 30  # Timeout threshold
  perf_feature_flags:
    paging_enabled: true
    emergency_small_pages: true
    hard_timeout_enabled: true
  duckdb_threads: 4
  max_pyarrow_group_stats_seconds: 5

# Schema Configuration (Phase 1.26.1 preparation)
schema:
  # Synonyms for column name mapping (Phase 1.26.1)
  synonyms:
    account_name: ["Account Name", "Company", "Company Name", "Customer", "Customer Name", "Name"]
    account_id: ["Account ID", "Acct ID", "Id", "ID", "External Id", "ExternalID"]
    parent_account_id: ["Parent Account ID", "Parent Id", "ParentID"]
    created_date: ["Created Date", "Create Date", "CreatedOn", "Created_On"]
    suffix_class: ["Suffix", "Company Suffix", "Entity Type"]
  
  # Templates for specific file patterns (Phase 1.26.1)
  templates:
    - match: "^company_junction_.*\\.csv$"
      aliases:
        account_name: ["Account Name"]
        account_id: ["Account ID"]
        created_date: ["Created Date"]
