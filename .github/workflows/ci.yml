name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.11"]
        duckdb: ["0.10.2", "0.10.3"]
        pyarrow: ["13", "14"]
        streamlit: ["on", "off"]
        include:
          # Add a minimal test run for faster feedback
          - python: "3.11"
            duckdb: "0.10.3"
            pyarrow: "14"
            streamlit: "off"
            test_scope: "minimal"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Install DuckDB
        run: |
          pip install "duckdb==${{ matrix.duckdb }}"

      - name: Install PyArrow
        run: |
          pip install "pyarrow==${{ matrix.pyarrow }}"

      - name: Install Streamlit (if enabled)
        if: matrix.streamlit == 'on'
        run: |
          pip install streamlit

      - name: Install project dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-benchmark prometheus-client

      - name: Run tests (minimal scope)
        if: matrix.test_scope == 'minimal'
        env:
          CJ_STREAMLIT_ENABLED: ${{ matrix.streamlit }}
        run: |
          pytest -m "not slow and not integration and not performance" --cov=src --cov-report=xml

      - name: Run tests (full scope)
        if: matrix.test_scope != 'minimal'
        env:
          CJ_STREAMLIT_ENABLED: ${{ matrix.streamlit }}
        run: |
          if [ "${{ matrix.streamlit }}" = "on" ]; then \
            pytest -m "not slow and not performance" --cov=src --cov-report=xml; \
          else \
            pytest -m "not streamlit and not slow and not performance" --cov=src --cov-report=xml; \
          fi

      - name: Upload coverage to Codecov
        if: matrix.test_scope == 'minimal'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - name: Run ruff
        run: |
          ruff check src/ tests/

      - name: Ensure ui_helpers is not referenced
        run: |
          ! git grep -n "src\.utils\.ui_helpers" -- ':!src/utils/ui_helpers.py' || (echo "Found references to deprecated ui_helpers module. Use new modules instead." && exit 1)

      - name: Run mypy
        run: |
          mypy src/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run bandit security scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true

      - name: Run safety check
        run: |
          safety check --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  performance:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-benchmark prometheus-client

      - name: Run performance benchmarks
        run: |
          pytest tests/perf/ -m performance --benchmark-only --benchmark-save=benchmark_results

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: .benchmarks/
